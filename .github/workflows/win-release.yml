name: Windows EXE (Qt 6 MSVC)

on:
  workflow_dispatch:
  push:
    tags: ["v*"]

jobs:
  build:
    runs-on: windows-latest

    steps:
      # --- 1. Клонируем проект
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- 2. Устанавливаем Qt (MSVC 2019 64-bit)
      - name: Install Qt (Windows MSVC)
        uses: jurplel/install-qt-action@v4
        with:
          version: 6.8.1           # можно 'latest'
          host: windows
          arch: win64_msvc2019_64
          modules: qtbase
          cache: true

      # --- 3. Конфигурируем CMake (MSVC)
      - name: Configure (CMake, MSVC)
        run: cmake -S . -B build -G "Visual Studio 17 2022" -A x64 -DCMAKE_BUILD_TYPE=Release

      # --- 4. Сборка проекта
      - name: Build
        run: cmake --build build --config Release

      # --- 5. Развёртывание Qt DLL рядом с exe
      - name: Deploy Qt DLLs
        run: |
          cd build/Release
          windeployqt Mandelbrot.exe
          if (!(Test-Path dist)) { New-Item -ItemType Directory dist | Out-Null }
          Copy-Item Mandelbrot.exe dist\
          Copy-Item *.dll -Destination dist\ -ErrorAction SilentlyContinue
          cd ../..

      # --- 6. Архивируем результат
      - name: Zip artifact
        run: powershell Compress-Archive -Path build/Release/dist/* -DestinationPath Mandelbrot-win64.zip -Force

      # --- 7. Загружаем артефакт (готовый .exe + DLL)
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Mandelbrot-win64
          path: Mandelbrot-win64.zip
